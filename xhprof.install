<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function xhprof_install() {
  // Use schema API to create database table.
  if( function_exists("drupal_install_schema") ) {
  drupal_install_schema('xhprof');
  
  } else {
  //create tables manually
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {xhprof_runs} (
		run_id varchar(32) NOT NULL default '' COMMENT 'The run ID for this xhprof run.',
		url text NOT NULL COMMENT 'The url for this run.',
		data blob NOT NULL COMMENT 'The data generated by this xhprof run.',
		time int NOT NULL default '0' COMMENT 'Total time taken to execute page.',
		calls int NOT NULL default '0' COMMENT 'Total number of function calls for this xhprof run.',
		memory int NOT NULL default '0' COMMENT 'Change in memory for this xhprof run.',
		cpu int NOT NULL default '0' COMMENT 'CPU usage for this xhprof run.',
		created int NOT NULL default '0' COMMENT 'A Unix timestamp indicating when this run was created.',
		PRIMARY KEY (run_id)
		) /*!40100 DEFAULT CHARACTER SET utf8 */;"
      );
      break;

    case 'pgsql':
      db_query("CREATE TABLE {xhprof_runs} (
		run_id varchar(32) NOT NULL default '',
		url text NOT NULL,
		data blob NOT NULL,
		time int NOT NULL default '0',
		calls int NOT NULL default '0',
		memory int NOT NULL default '0',
		cpu int NOT NULL default '0',
		created int NOT NULL default '0',
		PRIMARY KEY (run_id)
		);"
      );
      break;
  }
  }

  // Make sure profiling starts as early as possible
  db_query("UPDATE {system} SET weight = %d WHERE name = '%s'", 199, 'XHProf');
}

/**
 * Implementation of hook_uninstall().
 */
function xhprof_uninstall() {
  // Use schema API to delete database table.
  if( function_exists("drupal_uninstall_schema") ) {
  drupal_uninstall_schema('xhprof');
  
  } else {
	// drop tables here for Drupal 5.  not yet implemented.
  }
  // Delete all XHProf variables from variables table.
  db_query("DELETE FROM {variable} WHERE name LIKE '%s_%%'", 'XHProf');
}

/**
 * Implementation of hook_schema().
 * (Ignored by Drupal 5)
 */
function xhprof_schema() {
  $schema['xhprof_runs'] = array(
    'description' => t('Stores xhprof runs.'),
    'fields' => array(
      'run_id' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => t('The run ID for this xhprof run.'),
      ),
      'url' => array(
        'type' => 'text',
        'not null' => TRUE,
        'default' => '',
        'description' => t('The url for this run.'),
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'default' => '',
        'description' => t('The data generated by this xhprof run.')
      ),
      'time' => array(
        'description' => t('Total time taken to execute page.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
      'calls' => array(
        'description' => t('Total number of function calls for this xhprof run.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
      'memory' => array(
        'description' => t('Change in memory for this xhprof run.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
      'cpu' => array(
        'description' => t('CPU usage for this xhprof run.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
      'created' => array(
        'description' => t('A Unix timestamp indicating when this run was created.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
    ),
    'primary key' => array(
      'run_id'
    ),
  );
  
  return $schema;
}
